"""
A string is good if there are no repeated characters.

Given a string s, return the number of good substrings of length three in s​​​​​.

If there are multiple occurrences of the same substring, every occurrence should be counted.

A substring is a contiguous sequence of characters in a string.

Input: s = "xyzzaz"
Output: 1
Explanation: There are 4 substrings of size 3: "xyz", "yzz", "zza", and "zaz".
The only good substring of length 3 is "xyz".
"""

class Solution(object):
    def countGoodSubstrings(self, s):
        """
        :type s: str
        :rtype: int
        """
        k = 3
        
        if k > len(s):
            return 0
        
        freq = {}
        count = 0
        start = 0
        
        for i in range(len(s)):
            if s[i] not in freq:
                freq[s[i]] = 0
            freq[s[i]] += 1
            
            if i >= k - 1:
                if len(freq) == k:
                    count += 1
                
                freq[s[start]] -= 1
                if freq[s[start]] == 0:
                    del freq[s[start]]
                
                start += 1
                
        return count